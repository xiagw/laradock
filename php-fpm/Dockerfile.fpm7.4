FROM php:7.4-fpm as BUILDENV
LABEL maintainer="xiagw <fxiaxiaoyu@gmail.com>"
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN set -x \
    # && sed -i -e 's/deb.debian.org/mirrors.aliyun.com/g' \
    # -e 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \
    ## next lines are here becase there is no auto build on dockerhub see https://github.com/laradock/laradock/pull/1903#issuecomment-463142846
    # && apt-get upgrade -y \
    && apt-get update \
    && apt-get install -y --no-install-recommends apt-utils bash curl zip unzip libssl-dev libnghttp2-dev libpcre3-dev libjpeg-dev libpng-dev libfreetype6-dev \
    libpq-dev libmcrypt-dev libmemcached-dev jpegoptim optipng pngquant gifsicle libmagickwand-dev imagemagick libgmp-dev libzip-dev zlib1g-dev libicu-dev g++
RUN pecl install swoole && docker-php-ext-enable swoole && php -m |grep 'swoole'
RUN docker-php-ext-configure zip && docker-php-ext-install zip && docker-php-ext-enable zip && php -m | grep 'zip'
RUN docker-php-ext-install pdo_mysql && docker-php-ext-enable pdo_mysql
RUN docker-php-ext-install pdo_pgsql && docker-php-ext-enable pdo_pgsql
RUN docker-php-ext-configure intl  && docker-php-ext-install intl && docker-php-ext-enable intl
RUN docker-php-ext-install fileinfo && docker-php-ext-enable fileinfo
## php 7.3.26
# RUN docker-php-ext-configure gd --with-jpeg-dir=/usr/lib --with-freetype-dir=/usr/include/freetype2 \
## php 7.4.14
RUN docker-php-ext-configure gd --with-jpeg=/usr/lib --with-freetype=/usr/include/freetype2 && docker-php-ext-install gd && docker-php-ext-enable gd && php -m | grep 'gd'
RUN docker-php-ext-install gmp && docker-php-ext-enable gmp && php -m | grep 'gmp'
RUN docker-php-ext-install bcmath sockets sysvmsg sysvsem sysvshm && docker-php-ext-enable bcmath sockets sysvmsg sysvsem sysvshm
RUN docker-php-ext-install opcache && docker-php-ext-enable opcache
# RUN docker-php-ext-install mysqli && docker-php-ext-enable mysqli
RUN pecl install imagick && docker-php-ext-enable imagick
RUN docker-php-ext-install pcntl
RUN usermod -u 1000 www-data \
    && sed -i -e '/rlimit_files/s/^;//' -e '/rlimit_files/s/1024/51200/' /usr/local/etc/php-fpm.conf \
    && sed -i -e '/pm = dynamic/s/dynamic/ondemand/' -e '/pm.max_children/s/5/2000/' -e '/pm.start_servers/s/2/10/' -e '/pm.min_spare_servers/s/1/10/' -e '/pm.max_spare_servers/s/3/20/' /usr/local/etc/php-fpm.d/www.conf \
    && printf 'opcache.enable=1\nopcache.memory_consumption=256\nopcache.use_cwd=0\nopcache.max_file_size=0\nopcache.max_accelerated_files=30000\nopcache.validate_timestamps=1\nopcache.revalidate_freq=0' >/usr/local/etc/php/conf.d/opcache.ini \
    && sed -i -e '/^disable_functions/s/$/ phpinfo,system,mail/' -e '/^expose_php/s/On/Off/' -e '/^;track_errors/s/;//' -e '/track_errors/s/On/Off/' -e '/^upload_max_filesize/s/2M/48M/'  -e '/^max_file_uploads/s/20/200/' -e '/^memory_limit/s/128/256/' -e '/^post_max_size/s/8/32/' /usr/local/etc/php/php.ini-production \
    && grep -E 'disable_functions|expose_php|^track_errors|upload_max_filesize|max_file_uploads|memory_limit|post_max_size' /usr/local/etc/php/php.ini-production

#############################################################
FROM php:7.4-fpm
LABEL maintainer="xiagw <fxiaxiaoyu@gmail.com>"
USER root
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN set -x \
    && curl -sS https://getcomposer.org/installer | php \
    && mv composer.phar /usr/local/bin/composer \
    && chmod +x /usr/local/bin/composer \
    && composer self-update --clean-backups \
    # && composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ \
    && mkdir -p /var/www/.composer /.composer \
    && chown 1000:1000 /var/www/.composer /.composer

#####################################
# Set Timezone
#####################################
ARG TZ=UTC
ENV TZ ${TZ}
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
COPY --from=BUILDENV /usr/local/lib/php/extensions/no-debug-non-zts-20190902/ /usr/local/lib/php/extensions/no-debug-non-zts-20190902/
COPY --from=BUILDENV /usr/local/etc/php-fpm.conf /usr/local/etc/
COPY --from=BUILDENV /usr/local/etc/php-fpm.d/www.conf /usr/local/etc/php-fpm.d/
COPY --from=BUILDENV /usr/local/etc/php/conf.d/opcache.ini /usr/local/etc/php/conf.d/
COPY --from=BUILDENV /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini
COPY startup.sh /startup.sh

RUN set -x \
    # && sed -i \
    # -e 's/deb.debian.org/mirrors.ustc.edu.cn/g' \
    # -e 's/security.debian.org/mirrors.ustc.edu.cn/g' /etc/apt/sources.list \
    && pecl channel-update pecl.php.net \
    ## install nodejs
    && curl -fsSL https://deb.nodesource.com/setup_10.x | grep -v 'sleep 20' | bash - \
    && apt-get update \
    && apt-get install -yq nodejs \
    ## install apt-utils bash curl zip unzip cron
    && apt-get update \
    && apt-get install -yq --no-install-recommends vim apt-utils bash curl zip unzip cron jq \
    # libssl-dev libnghttp2-dev libpcre3-dev libjpeg-dev libpng-dev \
    # libfreetype6-dev libpq-dev libmcrypt-dev libmemcached-dev \
    ## next lines are here becase there is no auto build on dockerhub
    ## see https://github.com/laradock/laradock/pull/1903#issuecomment-463142846
    libzip-dev zlib1g-dev libicu-dev g++ \
    ## for image magick ext
    jpegoptim optipng pngquant gifsicle libmagickwand-dev imagemagick libgmp-dev\
    ## enable extention
    && docker-php-ext-enable bcmath gmp gd zip opcache pdo_mysql fileinfo sockets sysvmsg sysvsem sysvshm swoole imagick pcntl \
    && usermod -u 1000 www-data \
    && groupmod -g 1000 www-data \
    ## set user PATH
    # && printf 'export PATH=/var/www/node-v10/bin:$PATH' >/var/www/.bashrc \
    && chmod +x /startup.sh \
    ## Clear dev deps
    && apt-get clean \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/log/lastlog /var/log/faillog

WORKDIR /var/www
USER 1000
# ENTRYPOINT ["php-fpm"]
# CMD ["php-fpm"]
CMD ["/startup.sh"]

