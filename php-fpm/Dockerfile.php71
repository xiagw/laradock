ARG UBUNTU_VERSION=${UBUNTU_VERSION}
FROM ubuntu:${UBUNTU_VERSION}
ARG LARADOCK_PHP_VERSION=${PHP_VERSION}
ARG PHP_SESSION_REDIS=false
## for apt to be noninteractive
ENV DEBIAN_FRONTEND noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN true
ENV TIME_ZOME Asia/Shanghai
RUN set -xe; \
    if [ "$CHANGE_SOURCE" = true ]; then \
    sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list; \
    fi; \
    ## preesed tzdata, update package index, upgrade packages and install needed software
    truncate -s0 /tmp/preseed.cfg \
    && echo "tzdata tzdata/Areas select Asia" >> /tmp/preseed.cfg \
    && echo "tzdata tzdata/Zones/Asia select Shanghai" >> /tmp/preseed.cfg \
    && debconf-set-selections /tmp/preseed.cfg \
    && rm -f /etc/timezone /etc/localtime \
    && apt-get update -y \
    && apt-get install -y --no-install-recommends apt-utils tzdata \
    && apt-get install -y --no-install-recommends locales \
    && grep -q '^en_US.UTF-8' /etc/locale.gen || echo 'en_US.UTF-8 UTF-8' >>/etc/locale.gen \
    && locale-gen en_US.UTF-8; \
    if [ "$LARADOCK_PHP_VERSION" != '8.1' ]; then \
    apt-get install -y --no-install-recommends software-properties-common \
    && add-apt-repository ppa:ondrej/php; \
    fi; \
    apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
        vim \
        curl \
        nginx \
        php${LARADOCK_PHP_VERSION} \
        php${LARADOCK_PHP_VERSION}-redis \
        php${LARADOCK_PHP_VERSION}-mongodb \
        php${LARADOCK_PHP_VERSION}-imagick \
        php${LARADOCK_PHP_VERSION}-fpm \
        php${LARADOCK_PHP_VERSION}-gd \
        php${LARADOCK_PHP_VERSION}-mysql \
        php${LARADOCK_PHP_VERSION}-xml \
        php${LARADOCK_PHP_VERSION}-xmlrpc \
        php${LARADOCK_PHP_VERSION}-bcmath \
        php${LARADOCK_PHP_VERSION}-gmp \
        php${LARADOCK_PHP_VERSION}-zip \
        php${LARADOCK_PHP_VERSION}-soap \
        php${LARADOCK_PHP_VERSION}-curl \
        php${LARADOCK_PHP_VERSION}-bz2 \
        php${LARADOCK_PHP_VERSION}-mbstring \
        php${LARADOCK_PHP_VERSION}-msgpack \
        php${LARADOCK_PHP_VERSION}-sqlite3; \
        # php${LARADOCK_PHP_VERSION}-process \
        # php${LARADOCK_PHP_VERSION}-pecl-mcrypt  replace by  php${LARADOCK_PHP_VERSION}-libsodium
    if [ "$LARADOCK_PHP_VERSION" != '8.1' ]; then \
    apt-get install -y --no-install-recommends php${LARADOCK_PHP_VERSION}-mcrypt; \
    fi; \
    apt-get clean all && rm -rf /tmp/*

COPY ./run.sh /opt/
RUN set -xe \
    && sed -i \
        -e '/fpm.sock/s/^/;/' \
        -e '/fpm.sock/a listen = 9000' \
        -e '/rlimit_files/a rlimit_files = 51200' \
        -e '/pm.max_children/s/5/3000/'  \
        -e '/pm.start_servers/s/2/10/'  \
        -e '/pm.min_spare_servers/s/1/10/'  \
        -e '/pm.max_spare_servers/s/3/20/' \
        /etc/php/${LARADOCK_PHP_VERSION}/fpm/pool.d/www.conf \
    && sed -i \
        -e "/memory_limit/s/128M/256M/" \
        -e "/post_max_size/s/8M/1024M/" \
        -e "/upload_max_filesize/s/2M/1024M/" \
        -e "/max_file_uploads/s/20/256/" \
        -e '/disable_functions/s/$/phpinfo,/' \
        -e '/max_execution_time/s/30/60/' \
        /etc/php/${LARADOCK_PHP_VERSION}/fpm/php.ini; \
    if [ "${PHP_SESSION_REDIS:-false}" = true ]; then \
    sed -i \
    -e "/session.save_handler/s/files/redis/" \
    -e '/session.save_handler/a session.save_path = "tcp://127.0.0.1?auth=2kjYfzGCR2&database=1"' \
    /etc/php/${LARADOCK_PHP_VERSION}/fpm/php.ini; \
    fi; \
    chmod +x /opt/run.sh

## copy nginx conf
# COPY ./etc/ /etc/

EXPOSE 80 443 9000

WORKDIR /var/www/html
# WORKDIR /app

CMD ["/opt/run.sh"]
